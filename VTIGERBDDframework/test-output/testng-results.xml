<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="0" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="170" started-at="2021-01-21T17:43:08 IST" finished-at="2021-01-21T17:43:08 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@7a765367]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="170" started-at="2021-01-21T17:43:08 IST" finished-at="2021-01-21T17:43:08 IST">
      <class name="runner.Runner">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:runner.Runner@7a765367]" name="setUpClass" is-config="true" duration-ms="93" started-at="2021-01-21T17:43:08 IST" finished-at="2021-01-21T17:43:08 IST">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid tag expression at 'runner.Runner']]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid tag expression at 'runner.Runner'
at io.cucumber.core.options.CucumberOptionsAnnotationParser.addTags(CucumberOptionsAnnotationParser.java:79)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.parse(CucumberOptionsAnnotationParser.java:40)
at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: io.cucumber.tagexpressions.TagExpressionException: Tag expression '@SmokeTest, @Functional' could not be parsed because of syntax error: expected operator
at io.cucumber.tagexpressions.TagExpressionParser.check(TagExpressionParser.java:136)
at io.cucumber.tagexpressions.TagExpressionParser.parse(TagExpressionParser.java:74)
at io.cucumber.tagexpressions.TagExpressionParser.parse(TagExpressionParser.java:27)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.addTags(CucumberOptionsAnnotationParser.java:77)
... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner@7a765367]" name="tearDownClass" is-config="true" duration-ms="1" started-at="2021-01-21T17:43:08 IST" finished-at="2021-01-21T17:43:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
